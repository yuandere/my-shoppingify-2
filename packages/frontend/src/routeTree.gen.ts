/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as AboutImport } from './routes/about'
import { Route as AuthImport } from './routes/_auth'
import { Route as IndexImport } from './routes/index'
import { Route as AuthConfirmImport } from './routes/auth.confirm'
import { Route as AuthStatsImport } from './routes/_auth.stats'
import { Route as AuthSettingsImport } from './routes/_auth.settings'
import { Route as AuthListsImport } from './routes/_auth.lists'
import { Route as AuthItemsImport } from './routes/_auth.items'
import { Route as AuthGenerateImport } from './routes/_auth.generate'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthConfirmRoute = AuthConfirmImport.update({
  id: '/auth/confirm',
  path: '/auth/confirm',
  getParentRoute: () => rootRoute,
} as any)

const AuthStatsRoute = AuthStatsImport.update({
  id: '/stats',
  path: '/stats',
  getParentRoute: () => AuthRoute,
} as any)

const AuthSettingsRoute = AuthSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AuthRoute,
} as any)

const AuthListsRoute = AuthListsImport.update({
  id: '/lists',
  path: '/lists',
  getParentRoute: () => AuthRoute,
} as any)

const AuthItemsRoute = AuthItemsImport.update({
  id: '/items',
  path: '/items',
  getParentRoute: () => AuthRoute,
} as any)

const AuthGenerateRoute = AuthGenerateImport.update({
  id: '/generate',
  path: '/generate',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_auth/generate': {
      id: '/_auth/generate'
      path: '/generate'
      fullPath: '/generate'
      preLoaderRoute: typeof AuthGenerateImport
      parentRoute: typeof AuthImport
    }
    '/_auth/items': {
      id: '/_auth/items'
      path: '/items'
      fullPath: '/items'
      preLoaderRoute: typeof AuthItemsImport
      parentRoute: typeof AuthImport
    }
    '/_auth/lists': {
      id: '/_auth/lists'
      path: '/lists'
      fullPath: '/lists'
      preLoaderRoute: typeof AuthListsImport
      parentRoute: typeof AuthImport
    }
    '/_auth/settings': {
      id: '/_auth/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthSettingsImport
      parentRoute: typeof AuthImport
    }
    '/_auth/stats': {
      id: '/_auth/stats'
      path: '/stats'
      fullPath: '/stats'
      preLoaderRoute: typeof AuthStatsImport
      parentRoute: typeof AuthImport
    }
    '/auth/confirm': {
      id: '/auth/confirm'
      path: '/auth/confirm'
      fullPath: '/auth/confirm'
      preLoaderRoute: typeof AuthConfirmImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthGenerateRoute: typeof AuthGenerateRoute
  AuthItemsRoute: typeof AuthItemsRoute
  AuthListsRoute: typeof AuthListsRoute
  AuthSettingsRoute: typeof AuthSettingsRoute
  AuthStatsRoute: typeof AuthStatsRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthGenerateRoute: AuthGenerateRoute,
  AuthItemsRoute: AuthItemsRoute,
  AuthListsRoute: AuthListsRoute,
  AuthSettingsRoute: AuthSettingsRoute,
  AuthStatsRoute: AuthStatsRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/generate': typeof AuthGenerateRoute
  '/items': typeof AuthItemsRoute
  '/lists': typeof AuthListsRoute
  '/settings': typeof AuthSettingsRoute
  '/stats': typeof AuthStatsRoute
  '/auth/confirm': typeof AuthConfirmRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/generate': typeof AuthGenerateRoute
  '/items': typeof AuthItemsRoute
  '/lists': typeof AuthListsRoute
  '/settings': typeof AuthSettingsRoute
  '/stats': typeof AuthStatsRoute
  '/auth/confirm': typeof AuthConfirmRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/_auth/generate': typeof AuthGenerateRoute
  '/_auth/items': typeof AuthItemsRoute
  '/_auth/lists': typeof AuthListsRoute
  '/_auth/settings': typeof AuthSettingsRoute
  '/_auth/stats': typeof AuthStatsRoute
  '/auth/confirm': typeof AuthConfirmRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/about'
    | '/login'
    | '/generate'
    | '/items'
    | '/lists'
    | '/settings'
    | '/stats'
    | '/auth/confirm'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/about'
    | '/login'
    | '/generate'
    | '/items'
    | '/lists'
    | '/settings'
    | '/stats'
    | '/auth/confirm'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/about'
    | '/login'
    | '/_auth/generate'
    | '/_auth/items'
    | '/_auth/lists'
    | '/_auth/settings'
    | '/_auth/stats'
    | '/auth/confirm'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  AboutRoute: typeof AboutRoute
  LoginRoute: typeof LoginRoute
  AuthConfirmRoute: typeof AuthConfirmRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  AboutRoute: AboutRoute,
  LoginRoute: LoginRoute,
  AuthConfirmRoute: AuthConfirmRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/about",
        "/login",
        "/auth/confirm"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/generate",
        "/_auth/items",
        "/_auth/lists",
        "/_auth/settings",
        "/_auth/stats"
      ]
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/_auth/generate": {
      "filePath": "_auth.generate.tsx",
      "parent": "/_auth"
    },
    "/_auth/items": {
      "filePath": "_auth.items.tsx",
      "parent": "/_auth"
    },
    "/_auth/lists": {
      "filePath": "_auth.lists.tsx",
      "parent": "/_auth"
    },
    "/_auth/settings": {
      "filePath": "_auth.settings.tsx",
      "parent": "/_auth"
    },
    "/_auth/stats": {
      "filePath": "_auth.stats.tsx",
      "parent": "/_auth"
    },
    "/auth/confirm": {
      "filePath": "auth.confirm.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
